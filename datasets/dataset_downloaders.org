#+TITLE: Dataset Downloader Test
#+PROPERTY: header-args:jupyter-python :session dataset_downloaders_test :pandoc t :async yes :dir /home/zjabbar/code/data_science_utils/

* Tagline

Defines functions that, when called with no arguments, will return a train test split of a certain dataset. Also contains dictionaries grouping useful datasets together.

* About
This directory creates a number of "dataset downloaders".

The downloaders can be called without parameters to get a train test split of the data.
The downloaders have a number of keyword arguments to augment the datasets, for example:

- The input features (selects what 
- Active Learning (returns a labeled pool)

The idea is to not have the datasets take up physical space within this repository, but to have a collection of functions which can import the datasets as necessary from the web.
This also minimizes RAM usage from within an environment, as one does not need 

* Usage
#+BEGIN_SRC jupyter-python :results none
%load_ext autoreload
%autoreload 2
#+END_SRC

#+BEGIN_SRC jupyter-python
from datasets.compas import download_compas

X_train, y_train, labelled_index, X_test, y_test = download_compas(active_learning=True)
X_train
#+END_SRC

#+RESULTS:
:RESULTS:
|      |      | MarriageStatus | age | juv_fel_count | juv_misd_count | juv_other_count | priors_count | days_b_screening_arrest | c_days_from_compas | c_charge_degree |
|------+------+----------------+-----+---------------+----------------+-----------------+--------------+-------------------------+--------------------+-----------------|
| UID  | race |                |     |               |                |                 |              |                         |                    |                 |
| 1022 | 2    | 1              | 45  | 0.0           | 0.0            | 0.000000        | 0.263158     | 0.280761                | 0.000105           | 1               |
| 4572 | 3    | 1              | 45  | 0.0           | 0.0            | 0.000000        | 0.078947     | 0.265806                | 0.002530           | 1               |
| 5913 | 1    | 1              | 31  | 0.0           | 0.0            | 0.000000        | 0.078947     | -1.000000               | 0.000105           | 1               |
| 3936 | 3    | 1              | 27  | 0.0           | 0.0            | 0.000000        | 0.131579     | 0.280761                | 0.000105           | 1               |
| 612  | 2    | 1              | 21  | 0.0           | 0.0            | 0.058824        | 0.000000     | 0.280761                | 0.000105           | 1               |
| ...  | ...  | ...            | ... | ...           | ...            | ...             | ...          | ...                     | ...                | ...             |
| 2447 | 3    | 1              | 53  | 0.0           | 0.0            | 0.000000        | 0.052632     | 0.259687                | 0.003374           | 1               |
| 4003 | 2    | 1              | 50  | 0.0           | 0.0            | 0.000000        | 0.315789     | 0.266485                | 0.002319           | 1               |
| 3949 | 2    | 1              | 33  | 0.0           | 0.0            | 0.000000        | 0.026316     | 0.280761                | 0.000105           | 1               |
| 4850 | 2    | 1              | 53  | 0.0           | 0.0            | 0.000000        | 0.131579     | -1.000000               | 0.000105           | 0               |
| 6564 | 4    | 5              | 31  | 0.0           | 0.0            | 0.000000        | 0.000000     | -1.000000               | 0.000105           | 0               |

5511 rows Ã— 9 columns
:END:


* Further Improvements

- Make a kwarg which exports data into data loader formats (TensorFlow and PyTorch)
- Decide on stratification of having one module dedicated to one dataset or one module per learning task.
